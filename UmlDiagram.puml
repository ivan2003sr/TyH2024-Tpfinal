@startuml Diagrama

' Enumaraciones
enum tipoSesion {
    REGULAR 
    WORKSHOP
    POSTERS

}

enum TipoArticulo {
    REGULAR 
    POSTERS
}

' Gestión de Conferencias
class Conferencia {
    - String nombre
    - Date fechaInicio
    - Date fechaFin
    - List<Sesion> sesiones
    - List<Usuario> comitePrograma
    + crearConferencia(nombre, fechaInicio, fechaFin)
    + editarConferencia(nombre, fechaInicio, fechaFin)
}

class Sesion {
    - String tipo
    - String tema
    - Date fechaLimite
    - List<Articulo> articulos
    + crearSesion(tipo, tema, fechaLimite)
    + editarSesion(tipo, tema, fechaLimite)
    + agregarArticulo(articulo)
}

' Gestión de Usuarios
class Usuario {
    - String nombreCompleto
    - String afiliacion
    - String email
    - String contrasena
    - List<Rol> roles
    + registrarse(nombreCompleto, afiliacion, email, contrasena)
    + autenticarse(email, contrasena)
}

class Rol {
    - String nombre
}

class Autor {
    + enviarArticulo(articulo, sesion)
    + modificarArticulo (articulo)
}

class Revisor {
    + expresarInteres(articulo, interes)
    + emitirRevision(articulo, recomendacion, puntaje)
}

class Chair {
    + asignarRevisores(articulo, revisores)
    + seleccionarArticulos(criterio)
}

' Gestión de Artículos
class Articulo {
    - String titulo
    - String tipo
    - String abstract
    - String archivoAdjunto
    - String url
    - List<Revision> revisiones
    + enviarArticulo(titulo, tipo, abstract, archivoAdjunto, url)
    + modificarArticulo(titulo, tipo, abstract, archivoAdjunto, url)
    + validar()
}

class ArticuloRegular  {
    + enviarArticulo(titulo, tipo, abstract, archivoAdjunto)
    + validar()
}

class ArticuloPoster  {
    + enviarArticulo(titulo, tipo, abstract, archivoAdjunto, url)
    + validar()
}


class Revision {
    - Revisor revisor
    - String recomendacion
    - int puntaje
    + emitirRevision(revisor, recomendacion, puntaje)
    + validarPuntaje(puntaje)
}



' Proceso de Recepción
class ProcesoRecepcion {
    + validarArticulo(articulo)
    + rechazarArticulo(articulo)
}

' Proceso de Bidding
class ProcesoBidding {
    + expresarInteres(revisor, articulo, interes)
    + asignarRevisores(articulo)
}

' Proceso de Revisión
class ProcesoRevision {
    + recibirRevision(revisor, articulo, revision)
}

' Proceso de Selección
class ProcesoSeleccion {
    + seleccionarArticulos(sesion, criterio)
}

' Criterios de Selección
interface CriterioSeleccion {
    + seleccionar(articulos)
}

class CorteFijo  {
    + seleccionar(articulos)
}

class Mejores  {
    + seleccionar(articulos)
}

' Punto de Entrada
class ControladorPrincipal {
    + iniciarAplicacion()
    + gestionarConferencias()
    + gestionarUsuarios()
    + gestionarSesiones()
    + gestionarArticulos()
}

' Servicios
class ServicioConferencia {
    + crearConferencia(nombre, fechaInicio, fechafin)
    + editarConferencia(nombre, fechaInicio, fechaFin)
}



class ServicioUsuario {
    + registrarse(nombreCompleto, afiliacion, email, contrasena)
    + autenticarse(email, contrasena)
}

class ServicioSesion {
    + crearSesion(tipo, tema, fechaLimite)
    + editarSesion(tipo, tema, fechaLimite)
}

class ServicioArticulo {
    + enviarArticulo(titulo, tipo, abstract, archivoAdjunto, url)
    + modificarArticulo(titulo, tipo, abstract, archivoAdjunto, url)
    + validarArticulo(articulo)
}

' Patrones de Diseño
class Singleton {
    - static instance: Singleton
    + static getInstance()
}

class Factory {
    + crearUsuario(tipo, nombreCompleto, afiliacion, email, contrasena)
    + crearArticulo(tipo, titulo, abstract, archivoAdjunto, url)
}

class Observer {
    - List<Observer> observers
    + attach(observer)
    + detach(observer)
    + notify()
}

class Strategy {
    + seleccionarArticulos(criterio)
}

' Relaciones
ControladorPrincipal "1" -- "1" ServicioConferencia
ControladorPrincipal "1" -- "1" ServicioUsuario
ControladorPrincipal "1" -- "1" ServicioSesion
ControladorPrincipal "1" -- "1" ServicioArticulo
ServicioConferencia "1" -- "0..*" Conferencia
ServicioSesion "1" -- "0..*" Sesion
ServicioUsuario "1" -- "0..*" Usuario
ServicioArticulo "1" -- "0..*" Articulo
Conferencia "1" -- "0..*" Sesion
Sesion "0..*" -- "0..*" Articulo
Conferencia "1" -- "0..*" Usuario
Usuario "1" -- "0..*" Rol
Articulo "0..*" -- "0..*" Revision
Revision "1" -- "1" Revisor
Chair "1" -- "0..*" Articulo : asigna
Observer <|-- Articulo
Strategy --|> CriterioSeleccion
Factory <|-- Usuario
Factory <|-- Articulo
Singleton <|-- Conferencia
Usuario <|-- Autor
Usuario <|-- Revisor
Usuario <|-- Chair
ArticuloRegular --|> Articulo
ArticuloPoster --|> Articulo
Articulo "0..1" -- "1" ProcesoRecepcion : usa
Articulo "0..1" -- "1" ProcesoBidding : usa
Articulo "0..1" -- "1" ProcesoRevision : usa
Articulo "0..1" -- "1" ProcesoSeleccion : usa
Articulo "1" -- "1" TipoArticulo : tiene
Sesion "1" -- "1" tipoSesion : tiene
ProcesoSeleccion "1" -- "0..*" CriterioSeleccion : usa
CriterioSeleccion <|-- CorteFijo
CriterioSeleccion <|-- Mejores

@enduml
